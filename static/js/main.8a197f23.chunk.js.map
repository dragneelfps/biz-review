{"version":3,"sources":["components/AddReviewForm.js","components/AllReviews.js","components/App.js","serviceWorker.js","index.js"],"names":["AddEditReviewForm","_ref","onAddReview","isEditMode","onEditReview","onDeleteReview","props","Object","objectWithoutProperties","yyyy","String","Date","getFullYear","mm","getMonth","padStart","dd","getDate","today","concat","initBizName","initEmail","initRating","initComment","initDate","review","bizName","email","rating","comment","date","_useState","useState","_useState2","slicedToArray","setBizName","_useState3","_useState4","setEmail","_useState5","_useState6","setRating","_useState7","_useState8","setComment","_useState9","_useState10","setDate","validate","length","handleAddReview","useCallback","handleDelete","id","handleEditSaveReview","react_default","a","createElement","className","TextField","margin","label","value","onChange","e","target","FormControl","InputLabel","htmlFor","Select","inputProps","name","MenuItem","type","InputLabelProps","shrink","Fab","color","variant","onClick","Edit","Add","Delete","AllReviews","reviews","onOpenEditReview","Fragment","map","Card","key","CardContent","Typography","stars","i","star","Star","push","renderStars","CardActions","handleOpenEditReview","App","setReviews","currentTab","setCurrentTab","isEditOpen","setIsEditOpen","editReview","setEditReview","reviewId","newReviews","forEach","rev","Tabs","newVal","console","log","centered","Tab","components_AddReviewForm","toConsumableArray","components_AllReviews","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8a197f23.chunk.js","sourcesContent":["import React, { useRef, useState, useCallback } from 'react'\nimport { FormControl, TextField, InputLabel, Select, MenuItem, IconButton, Fab } from '@material-ui/core';\n\nimport { Add, Delete, Edit } from '@material-ui/icons'\n\nimport './AddReviewForm.css'\n\nfunction AddEditReviewForm({ onAddReview, isEditMode, onEditReview, onDeleteReview, ...props }) {\n\n    const yyyy = String(new Date().getFullYear())\n    const mm = String(new Date().getMonth() + 1).padStart(2, '0')\n    const dd = String(new Date().getDate()).padStart(2, '0')\n    const today = `${yyyy}-${mm}-${dd}`\n\n    let initBizName = \"Expedia\"\n    let initEmail = \"drag@gmail.com\"\n    let initRating = 4\n    let initComment = \"Fantasic Place to Work\"\n    let initDate = today\n\n    if(isEditMode) {\n        initBizName = props.review.bizName\n        initEmail = props.review.email\n        initRating = props.review.rating\n        initComment = props.review.comment\n        initDate = props.review.date\n    } else {\n        initDate = today\n    }\n\n    const [bizName, setBizName] = useState(initBizName)\n    const [email, setEmail] = useState(initEmail)\n    const [rating, setRating] = useState(initRating)\n    const [comment, setComment] = useState(initComment)\n    const [date, setDate] = useState(initDate)\n\n    const onBizNameChange = (e) => {\n        setBizName(e.target.value)\n    }\n\n    const onEmailChange = (e) => {\n        setEmail(e.target.value)\n    }\n\n    const onRatingChange = e => {\n        setRating(e.target.value)\n    }\n\n    const onCommentChange = e => {\n        setComment(e.target.value)\n    }\n\n    const onDateChanged = e => {\n        setDate(e.target.value)\n    }\n\n    const validate = () => {\n        if (bizName.length <= 0) {\n            return false\n        }\n        if (email.length <= 0) {\n            return false\n        }\n        if (rating.length <= 0) {\n            return false\n        }\n        if (comment.length <= 0) {\n            return false\n        }\n        return true\n    }\n\n    const handleAddReview = useCallback(() => {\n        if (validate()) {\n            onAddReview({\n                bizName,\n                email,\n                rating,\n                comment,\n                date\n            })\n        }\n    }, [bizName, email, rating, comment, date])\n\n    const handleDelete = useCallback(() => {\n        if(isEditMode) {\n            onDeleteReview(props.review.id)\n        } else {\n            setBizName(\"\")\n            setEmail(\"\")\n            setRating(\"\")\n            setComment(\"\")\n            setDate(today)\n        }\n    }, [today, isEditMode, props])\n\n    const handleEditSaveReview = useCallback(() => {\n        if (validate()) {\n            onEditReview({\n                id: props.review.id,\n                bizName,\n                email,\n                rating,\n                comment,\n                date\n            })\n        }\n    }, [bizName, email, rating, comment, date])\n\n\n    return (\n        <form className=\"form\">\n            <TextField\n                margin=\"normal\"\n                label=\"Business Name\"\n                value={bizName}\n                onChange={onBizNameChange}\n            />\n            <TextField\n                margin=\"normal\"\n                label=\"Email\"\n                value={email}\n                onChange={onEmailChange}\n            />\n            <FormControl\n                margin=\"normal\">\n                <InputLabel htmlFor=\"rating\">Rating</InputLabel>\n                <Select value={rating} onChange={onRatingChange} inputProps={{ name: 'rating', id: 'rating' }}>\n                    <MenuItem value={1}>1 Star</MenuItem>\n                    <MenuItem value={2}>2 Star</MenuItem>\n                    <MenuItem value={3}>3 Star</MenuItem>\n                    <MenuItem value={4}>4 Star</MenuItem>\n                    <MenuItem value={5}>5 Star</MenuItem>\n                </Select>\n            </FormControl>\n            <TextField\n                label=\"Comment\"\n                value={comment}\n                onChange={onCommentChange}\n                margin=\"normal\"\n            />\n            <TextField\n                label=\"Review Date\"\n                value={date}\n                onChange={onDateChanged}\n                type=\"date\"\n                margin=\"normal\"\n                InputLabelProps={{\n                    shrink: true\n                }}\n            />\n            <div className=\"add-review-actions\">\n                {!isEditMode ? \n                <Fab color=\"primary\" variant=\"extended\" onClick={handleAddReview}>\n                    <Add /> Add\n               </Fab> : \n                <Fab color=\"primary\" variant=\"extended\" onClick={handleEditSaveReview}>\n                    <Edit />Save\n                </Fab>}\n\n                <Fab color=\"secondary\" variant=\"extended\" onClick={handleDelete}>\n                    <Delete /> {isEditMode ? \"Delete\" : \"Reset\"}\n               </Fab>\n            </div>\n        </form>\n    )\n}\n\nexport default AddEditReviewForm","import React from 'react'\nimport { Card, CardContent, Typography, CardActions, Button, Fab } from '@material-ui/core';\nimport { Delete, Edit, Star } from '@material-ui/icons';\n\nfunction AllReviews({ reviews, onDeleteReview, onOpenEditReview }) {\n\n    if (reviews.length <= 0) {\n        return <></>\n    }\n\n    const renderStars = (rating) => {\n        const stars = []\n        for (let i = 0; i < rating; i++) {\n            const star = (\n                <Star key={i} />\n            )\n            stars.push(star)\n        }\n        return stars\n    } \n\n    const handleOpenEditReview = (review) => {\n        onOpenEditReview(review)\n    }\n\n    return (\n        <>\n            {reviews.map((review) => {\n                return (\n                    <Card key={review.id}>\n                        <CardContent>\n                            <Typography>{review.bizName}</Typography>\n                            {renderStars(review.rating)}\n                            <Typography>{review.comment}</Typography>\n                            <Typography>{review.email}</Typography>\n                        </CardContent>\n                        <CardActions>\n                            <Fab color=\"primary\" variant=\"extended\" onClick={() => handleOpenEditReview(review)}>\n                                <Edit />\n                                Edit\n                            </Fab>\n                            <Fab color=\"secondary\" variant=\"extended\" onClick={() => onDeleteReview(review.id)}>\n                                <Delete />\n                                Delete\n                            </Fab>\n                        </CardActions>\n                    </Card>\n                )\n            })}\n        </>\n    )\n\n}\n\nexport default AllReviews","import React, { useState } from 'react';\nimport { Typography, AppBar, Tabs, Tab, TabPa } from '@material-ui/core'\nimport './App.css';\nimport AddEditReviewForm from './AddReviewForm';\nimport AllReviews from './AllReviews';\n\nlet id = 0\n\nfunction App() {\n\n  const [reviews, setReviews] = useState([])\n\n  const [currentTab, setCurrentTab] = useState(0)\n\n  const [isEditOpen, setIsEditOpen] = useState(false)\n  const [editReview, setEditReview] = useState(null)\n\n  const handleTabChange = (e, newVal) => {\n    setCurrentTab(newVal)\n    console.log(newVal)\n  }\n\n  const onAddReview = (review) => {\n    review.id = ++id\n    console.log(review)\n    setReviews([...reviews, review])\n  }\n\n  const onDeleteReview = (reviewId) => {\n    const newReviews = []\n    reviews.forEach(rev => {\n      if (rev.id !== reviewId) {\n        newReviews.push(rev)\n      }\n    })\n    setReviews(newReviews)\n\n    if (isEditOpen) {\n      setIsEditOpen(false)\n      setEditReview(null)\n      setCurrentTab(0)\n    }\n  }\n\n  const onEditReview = (review) => {\n    const newReviews = []\n    reviews.forEach(rev => {\n      if (rev.id !== review.id) {\n        newReviews.push(rev)\n      } else {\n        newReviews.push(review)\n      }\n    })\n    setReviews(newReviews)\n  }\n\n  const onOpenEditReview = (review) => {\n    setIsEditOpen(true)\n    setEditReview(review)\n  }\n\n\n  return (\n    <div>\n      <Tabs value={currentTab} onChange={handleTabChange} centered>\n        <Tab label=\"Add Review\"></Tab>\n        {reviews.length > 0 && <Tab label=\"All Reviews\" />}\n        {isEditOpen && <Tab label=\"Edit Review\" />}\n      </Tabs>\n      {currentTab === 0 && <AddEditReviewForm onAddReview={onAddReview} />}\n      {currentTab === 1 && <AllReviews reviews={reviews} onDeleteReview={onDeleteReview} onOpenEditReview={onOpenEditReview} />}\n      {currentTab === 2 && isEditOpen && <AddEditReviewForm onEditReview={onEditReview} isEditMode={isEditOpen} review={editReview} onDeleteReview={onDeleteReview} />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}